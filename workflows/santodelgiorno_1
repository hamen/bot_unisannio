name: Fetch RSS and Send Telegram Message

on:
  schedule:
    - cron: '0 * * * *' # Esegue ogni ora
  workflow_dispatch:

jobs:
  fetch-rss:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install axios xml2js date-fns

      - name: Get today's date and time
        id: todaysDateTime
        run: |
          echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
          echo "hour=$(TZ=Europe/Rome date +'%H')" >> $GITHUB_ENV

      - name: Fetch RSS and Check Title
        id: checkTitle
        run: |
          const axios = require('axios');
          const xml2js = require('xml2js');
          const { format } = require('date-fns');
          const RSS_URL = 'https://liturgia.silvestrini.org/rss.santi.xml';

          async function fetchRSS() {
            try {
              const response = await axios.get(RSS_URL);
              const rssData = response.data;
              const parser = new xml2js.Parser();
              parser.parseString(rssData, (err, result) => {
                if (err) {
                  console.error('Error parsing XML:', err);
                  return;
                }

                const items = result.rss.channel[0].item;
                const today = process.env.date;
                const currentHour = process.env.hour;

                // Check if the current hour is 09:00 in Italy
                if (currentHour !== '09') {
                  console.log('::set-output name=message::Not the correct hour for sending the message');
                  return;
                }

                const todayItems = items.filter(item => {
                  const title = item.title[0];
                  return title.startsWith(today);
                });

                if (todayItems.length > 0) {
                  const message = todayItems.map(item => item.title[0]).join('\n');
                  console.log(`::set-output name=message::${message}`);
                } else {
                  console.log('::set-output name=message::dio');
                }
              });
            } catch (error) {
              console.error('Error fetching RSS feed:', error);
            }
          }

          fetchRSS();
        shell: node

      - name: Send a Telegram message
        if: steps.checkTitle.outputs.message != 'dio'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ steps.checkTitle.outputs.message }}

      - name: Log no match message
        if: steps.checkTitle.outputs.message == 'dio'
        run: echo "No matching titles found. Message: dio"
